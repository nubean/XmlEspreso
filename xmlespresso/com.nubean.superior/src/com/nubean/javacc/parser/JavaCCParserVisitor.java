/* Generated By:JavaCC: Do not edit this line. JavaCCParserVisitor.java Version 5.0 */
/*
The MIT License (MIT)

Copyright (c) 2015 NuBean LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

package com.nubean.javacc.parser;

public interface JavaCCParserVisitor
{
  public Object visit(SimpleNode node, Object data);
  public Object visit(ASTJavaCC node, Object data);
  public Object visit(ASTOptions node, Object data);
  public Object visit(ASTOptionBinding node, Object data);
  public Object visit(ASTJavaCodeProd node, Object data);
  public Object visit(ASTBNFProd node, Object data);
  public Object visit(ASTRegExProd node, Object data);
  public Object visit(ASTTokenMgrDecls node, Object data);
  public Object visit(ASTTokenKind node, Object data);
  public Object visit(ASTTokenSpec node, Object data);
  public Object visit(ASTExpansionChoices node, Object data);
  public Object visit(ASTExpansion node, Object data);
  public Object visit(ASTExpansionUnit node, Object data);
  public Object visit(ASTRegEx node, Object data);
  public Object visit(ASTNodeDescriptor node, Object data);
  public Object visit(ASTCompilationUnit node, Object data);
  public Object visit(ASTJavaCompilationUnit node, Object data);
  public Object visit(ASTPackageDeclaration node, Object data);
  public Object visit(ASTImportDeclaration node, Object data);
  public Object visit(ASTClassDeclaration node, Object data);
  public Object visit(ASTInterfaceDeclaration node, Object data);
  public Object visit(ASTInterfaceMemberDeclaration node, Object data);
  public Object visit(ASTFieldDeclaration node, Object data);
  public Object visit(ASTVariableDeclarator node, Object data);
  public Object visit(ASTVariableDeclaratorId node, Object data);
  public Object visit(ASTVariableInitializer node, Object data);
  public Object visit(ASTMethodDeclaration node, Object data);
  public Object visit(ASTMethodDeclarator node, Object data);
  public Object visit(ASTFormalParameters node, Object data);
  public Object visit(ASTFormalParameter node, Object data);
  public Object visit(ASTConstructorDeclaration node, Object data);
  public Object visit(ASTExplicitConstructorInvocation node, Object data);
  public Object visit(ASTInitializer node, Object data);
  public Object visit(ASTType node, Object data);
  public Object visit(ASTPrimitiveType node, Object data);
  public Object visit(ASTResultType node, Object data);
  public Object visit(ASTPrimaryPrefix node, Object data);
  public Object visit(ASTPrimarySuffix node, Object data);
  public Object visit(ASTCharacterLiteral node, Object data);
  public Object visit(ASTFloatingLiteral node, Object data);
  public Object visit(ASTIntegerLiteral node, Object data);
  public Object visit(ASTBooleanLiteral node, Object data);
  public Object visit(ASTStringLiteral node, Object data);
  public Object visit(ASTNullLiteral node, Object data);
  public Object visit(ASTStatement node, Object data);
}
/* JavaCC - OriginalChecksum=fa5471f190dca33daceb6ff32e93d74b (do not edit this line) */
